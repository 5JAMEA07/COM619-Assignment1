name: CI/CD Workflow for Production

on:
  push:
    branches: [ "production" ]
    paths:
      - 'src/**/*'
      - 'Dockerfile'
      - 'view/**/*'
      - 'view/Dockerfile'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    if: contains(github.event.push.changed_files, 'src/**/*') || contains(github.event.push.changed_files, 'Dockerfile')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and test backend
        run: mvn clean install -DskipTests

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  build-frontend:
    runs-on: ubuntu-latest
    if: contains(github.event.push.changed_files, 'view/**/*') || contains(github.event.push.changed_files, 'view/Dockerfile')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Frontend
        run: |
          cd view
          npm install
          npm run build

      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./view
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy_to_vm:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            cd kryptonite
            docker compose pull
            docker compose up -d